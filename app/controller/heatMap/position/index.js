"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const egg_1 = require("egg");
const xlsx = require("xlsx");
const position_has_pointer_1 = require("../../../view/heatMap/position/position-has-pointer");
const position_has_pointer_amap_3d_1 = require("../../../view/heatMap/position/position-has-pointer-amap-3d");
const position_has_pointer_amap_1 = require("../../../view/heatMap/position/position-has-pointer-amap");
const utils_1 = require("../../../lib/utils");
const PAGE_TAG = 'heatMap';
const TYPE = 'position';
const isSelfProvince = false; // 是否只获取本省内Excel数据，默认全部
class PositionController extends egg_1.Controller {
    async upload(ctx) {
        const { service } = this;
        await service.file.uploadFileMultiple({ ctx, folderName: PAGE_TAG, type: TYPE }); // 文件转存处理
        ctx.body = {
            code: 200,
            success: true,
            rows: '上传成功',
        };
        ctx.status = 200;
    }
    /**
     * 生成文件
     */
    async createPath(ctx) {
        const { service } = this;
        const { type = '' } = ctx.query;
        let handlerFormatFun = position_has_pointer_1.getView;
        if (type === 'amap') {
            handlerFormatFun = position_has_pointer_amap_1.getViewAmap;
        }
        else if (type === 'amap3D') {
            handlerFormatFun = position_has_pointer_amap_3d_1.getViewAmap3D;
        }
        const data = await service.excel.getExcelsData({ folderName: PAGE_TAG, type: TYPE, handlerFormat: this.formatData }); // 获取PAGE_TAG文件夹下，所有Excel格式化后数据
        await service.fileAsync.writeFilesHTML({ data, folderName: PAGE_TAG, type: TYPE, templateView: handlerFormatFun }); // 生成对应html文件
        await service.fileAsync.writeFilesJS({ data, folderName: PAGE_TAG, type: TYPE }); // 生成js文件
        ctx.body = 'success';
        ctx.status = 200;
    }
    /**
     * 生成文件并且下载压缩文件 @TODO 出错
     */
    async createPathDown(ctx) {
        const { type = '' } = ctx.query;
        let handlerFormatFun = position_has_pointer_1.getView;
        if (type === 'amap') {
            handlerFormatFun = position_has_pointer_amap_1.getViewAmap;
        }
        else if (type === 'amap3D') {
            handlerFormatFun = position_has_pointer_amap_3d_1.getViewAmap3D;
        }
        const data = await this.service.excel.getExcelsData({ folderName: PAGE_TAG, type: TYPE, handlerFormat: this.formatData }); // 获取PAGE_TAG文件夹下，所有Excel格式化后数据
        console.log('--------write---html----begin-----');
        await this.service.fileAsync.writeFilesHTML({ data, folderName: PAGE_TAG, type: TYPE, templateView: handlerFormatFun }); // 生成对应html文件
        console.log('--------write---js----begin-----');
        await this.service.fileAsync.writeFilesJS({ data, folderName: PAGE_TAG, type: TYPE }); // 生成js文件
        ctx.body = 'test';
        ctx.status = 200;
    }
    /**
     * 压缩文件
     */
    async compress(ctx) {
        const content = await this.service.file.compressDir({ ctx, folderName: PAGE_TAG, type: TYPE, isDel: true }); // 压缩文件后将文件返回给服务器,并删除目标文件和压缩文件
        ctx.body = content;
        ctx.status = 200;
    }
    /**
     * 生成网页json
     */
    async getJSON(ctx) {
        const data = await this.service.excel.getExcelsData({ folderName: PAGE_TAG, type: TYPE, handlerFormat: this.formatData }); // 获取PAGE_TAG文件夹下，所有Excel格式化后数据const rows = await this.service.excel.getExcelsData({ folderName: PAGE_TAG, handlerFormat: this.formatData });
        ctx.body = {
            code: 200,
            data,
            success: true,
        };
        ctx.status = 200;
    }
    /**
     * 下载示例模版文件
     */
    async downTemplateFile(ctx) {
        const fileName = '居住常访地-带点.zip';
        const content = await this.service.file.readTemplateFile({ ctx, folderName: PAGE_TAG, fileName });
        ctx.body = content;
        ctx.status = 200;
    }
    formatData({ sheets, fileName }) {
        const positions = sheets.map((sheet, index) => {
            if (sheet && index === 0) {
                return getPosition({ sheet, fileName }, isSelfProvince);
            }
            else if (sheet && index === 1) {
                return getPointer({ sheet, icon: utils_1.HEAMP_MARKER_ICON.blue });
            }
            else if (sheet && index === 2) {
                return getPointer({ sheet, icon: utils_1.HEAMP_MARKER_ICON.pink });
            }
        });
        return positions;
    }
}
exports.default = PositionController;
function getPosition({ sheet, fileName }, self) {
    const sheetJSON = xlsx.utils.sheet_to_json(sheet);
    const heatMap = {};
    const rateObj = {};
    const [TYPE, RATE, PROVINCE, CITY] = ['位置信息', '覆盖占比', '省', '市'];
    const max = {};
    const selfProvince = sheetJSON && sheetJSON[0][PROVINCE];
    if (self) {
        console.log('------本省-----');
        sheetJSON.forEach(item => {
            const { lon, lat, [RATE]: rate, [PROVINCE]: province, [TYPE]: type } = item;
            if (selfProvince === province) {
                const tempHeatMapArr = heatMap[type] = heatMap[type] || [];
                const tempHeatRateArr = rateObj[type] = rateObj[type] || [];
                tempHeatRateArr.push(rate);
                tempHeatMapArr.push([lon, lat, rate]);
            }
        });
    }
    else {
        console.log('------所有-----');
        sheetJSON.forEach(item => {
            const { gdlon, gdlat, [RATE]: rate, [TYPE]: type } = item;
            const tempHeatMapArr = heatMap[type] = heatMap[type] || [];
            const tempHeatRateArr = rateObj[type] = rateObj[type] || [];
            tempHeatRateArr.push(rate);
            tempHeatMapArr.push([gdlon, gdlat, rate]);
        });
    }
    Object.keys(rateObj).forEach(key => {
        const newArray = Array.from(new Set(rateObj[key]));
        max[`${key}`] = Math.max(...newArray);
    });
    return Object.assign({
        radius: 20,
        province: selfProvince,
        city: sheetJSON && sheetJSON[0][CITY],
        fileName,
        heatMap,
        max,
    });
}
function getPointer({ sheet, icon }) {
    const sheetJSON = xlsx.utils.sheet_to_json(sheet);
    const pointer = [];
    const NAME = '店名';
    sheetJSON.forEach(item => {
        const { gdlon, gdlat, [NAME]: name } = item;
        pointer.push([gdlon, gdlat, name]);
    });
    return Object.assign({
        pointer,
        icon,
    });
}
//# sourceMappingURL=data:application/json;base64,